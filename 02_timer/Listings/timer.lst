C51 COMPILER V9.60.0.0   TIMER                                                             05/20/2022 10:54:25 PAGE 1   


C51 COMPILER V9.60.0.0, COMPILATION OF MODULE TIMER
OBJECT MODULE PLACED IN .\Objects\timer.obj
COMPILER INVOKED BY: C:\Keil\Keil_v5\C51\BIN\C51.EXE timer.c OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND PRINT(.\Listing
                    -s\timer.lst) TABS(2) OBJECT(.\Objects\timer.obj)

line level    source

   1          #include <REG52.H>
   2          #include <intrins.h>
   3          
   4          typedef unsigned int u16;
   5          typedef unsigned char u8;
   6          
   7          // 138译码器
   8          sbit LSA = P2^0;
   9          sbit LSB = P2^1;
  10          sbit LSC = P2^2; 
  11          
  12          // 数码管段选表
  13          u8 code SmgDuanTable[] = {
  14              0x3f, 0x06, 0x5b, 0x4f,
  15              0x66, 0x6d, 0x7d, 0x07,
  16            0x7f, 0x6f, 0x77, 0x7c,
  17              0x39, 0x5e, 0x79, 0x71,
  18              0x76, 0x79, 0x38, 0x3f,  // hello
  19          };
  20          
  21          // 全局变量
  22          long number = 799;
  23          u8 temp;
  24          u8 cnt01;
  25          u8 cnt02;
  26          u8 cnt11;
  27          u8 flag = 0;   // 计数停止时标志位
  28          u8 flag2 = 0;  // 3s计数标志位
  29          
  30          
  31          void delay_ms(u16 n)
  32          {
  33   1          u8 n1 = 23;
  34   1          n *= n1;
  35   1          
  36   1          while ( n-- );
  37   1      }
  38          
  39          
  40          // 数码管显示
  41          void smg_display(u16 number)
  42          {
  43   1          u8 ge = number % 10;
  44   1          u8 shi = number / 10 % 10;
  45   1          u8 bai = number / 100;
  46   1      
  47   1          // 显示百位
  48   1          LSC = 0, LSB = 0, LSA = 0; 
  49   1          P0 = SmgDuanTable[bai];
  50   1          delay_ms(5);
  51   1          P0 = 0x00;
  52   1          
  53   1          // 显示十位
  54   1          LSA = 1;  // LSC = 0, LSB = 0, LSA = 1;
C51 COMPILER V9.60.0.0   TIMER                                                             05/20/2022 10:54:25 PAGE 2   

  55   1          P0 = SmgDuanTable[shi];
  56   1          delay_ms(5);
  57   1          P0 = 0x00;
  58   1      
  59   1          // 显示个位
  60   1          LSB = 1, LSA = 0;  // LSC = 0, LSB = 1, LSA = 0;
  61   1          P0 = SmgDuanTable[ge];
  62   1          delay_ms(5);
  63   1          P0 = 0x00;
  64   1      
  65   1      }
  66          
  67          // 数码管显示 HELLO
  68          void smg_display_str()
  69          {
  70   1          LSC = 0, LSB = 0, LSA = 0; 
  71   1          P0 = SmgDuanTable[16];
  72   1          delay_ms(5);
  73   1          P0 = 0x00;
  74   1          
  75   1          LSA = 1;  // LSC = 0, LSB = 0, LSA = 1;
  76   1          P0 = SmgDuanTable[17];
  77   1          delay_ms(5);
  78   1          P0 = 0x00;
  79   1      
  80   1          LSB = 1, LSA = 0;  // LSC = 0, LSB = 1, LSA = 0;
  81   1          P0 = SmgDuanTable[18];
  82   1          delay_ms(5);
  83   1          P0 = 0x00;
  84   1      
  85   1          LSA = 1;  // LSC = 0, LSB = 1, LSA = 1;
  86   1          P0 = SmgDuanTable[18];
  87   1          delay_ms(5);
  88   1          P0 = 0x00;
  89   1      
  90   1          LSC = 1, LSB = 0, LSA = 0;  // LSC = 1, LSB = 0, LSA = 0;
  91   1          P0 = SmgDuanTable[19];
  92   1          delay_ms(5);
  93   1          P0 = 0x00;
  94   1      }
  95          
  96          // 定时器初始化
  97          void init_timer()
  98          {
  99   1          TMOD = 0x11;  // T0、T1 均工作在方式1，16位定时器
 100   1          TH0 = (65535 - 50000) / 256;   // T0: 50ms
 101   1          TL0 = (65535 - 50000) % 256;
 102   1          TH1 = (65535 - 50000) / 256;   // T1: 50ms
 103   1          TL1 = (65535 - 50000) % 256;
 104   1          EA = 1;
 105   1          ET0 = 1, ET1 = 1;
 106   1          TR0 = 1, TR1 = 1;
 107   1      }
 108          
 109          void timer0() interrupt 1
 110          {
 111   1          TH0 = (65535 - 50000) / 256;   // T0: 50ms
 112   1          TL0 = (65535 - 50000) % 256;
 113   1      
 114   1          cnt01++;
 115   1          // 流水灯
 116   1          if ( !flag ) {
C51 COMPILER V9.60.0.0   TIMER                                                             05/20/2022 10:54:25 PAGE 3   

 117   2              if ( 10 == cnt01 ) {
 118   3                  cnt01 = 0; 
 119   3                  temp = _crol_(temp, 1);
 120   3                  P3 = temp; 
 121   3              }
 122   2          } else {
 123   2              // 200ms 闪烁
 124   2              if ( cnt01 % 4 == 0 ) {
 125   3                  P3 = ~P3;
 126   3              }
 127   2              // 3s 计时
 128   2              if ( 60 == cnt01 ) {
 129   3                  P3 = 0x00;  // 关闭LED
 130   3                  TR0 =  0;   // 为了 P3 = ~P3; 这一句不再执行，关闭定时器
 131   3                  flag2 = 1;  // 3s 已到标志位
 132   3              }
 133   2          }
 134   1      }
 135          
 136          void timer1() interrupt 3
 137          {
 138   1          TH1 = (65535 - 50000) / 256;   // T0: 50ms
 139   1          TL1 = (65535 - 50000) % 256;
 140   1      
 141   1          cnt11++;
 142   1          // 数字递减
 143   1          if ( 2 == cnt11 ) { // 100ms
 144   2              cnt11 = 0;
 145   2              number--;
 146   2              if ( number <= 775 ) {
 147   3                  TR0 = 0;    // 流水灯不再流动
 148   3                  P3 = 0x00;  // 关闭LED
 149   3                  flag = 1;   // T0停止标志位
 150   3                  TR1 = 0;    // 数码管不再递减
 151   3      
 152   3                  // T0 再次开启前先初始化
 153   3                  cnt01 = 0; 
 154   3                  TH0 = (65535 - 50000) / 256;   // T0: 50ms
 155   3                  TL0 = (65535 - 50000) % 256;
 156   3                  TR0 = 1;
 157   3              }
 158   2          }
 159   1      }
 160          
 161          void main()
 162          {   
 163   1          temp = 0x01;  // LED
 164   1          P3 = temp;
 165   1      
 166   1          init_timer();
 167   1          
 168   1      
 169   1          while (1) {
 170   2              if ( !flag2 ) {
 171   3                  smg_display(number);
 172   3              } else {
 173   3                  smg_display_str();
 174   3              }
 175   2          }
 176   1      
 177   1      }

C51 COMPILER V9.60.0.0   TIMER                                                             05/20/2022 10:54:25 PAGE 4   


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    432    ----
   CONSTANT SIZE    =     20    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =     10       2
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
